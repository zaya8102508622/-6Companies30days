class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        unordered_map<int , int>mp;
          int i = 0;
        long long sum = 0;
        long long maxlen=0;
         int n = nums.size();
        for(int j=0 ; j<n ;j++)
        {  
            sum = sum +nums[j];
            mp[nums[j]]++;
            if(j-i+1 > k)
            {
                mp[nums[i]]--;
                 if (mp[nums[i]] == 0) {
                    mp.erase(nums[i]);
                 }
                 sum = sum - nums[i];
                  i++;
            }
            if((j-i+1) == k && mp.size()==k)
            {
                maxlen = max(maxlen , sum);
            }
        }
            return maxlen;
    }
};
